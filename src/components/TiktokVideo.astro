---
import Icon from "./ui/Icon.astro"

interface Props {
  videoId: string
  thumbnailUrl: string
  title: string
}

const { videoId, thumbnailUrl, title } = Astro.props
---

<tiktok-video
  class="rounded-[16px] h-[570px] w-80 snap-center bg-black relative shrink-0 cursor-pointer bg-center bg-[length:100%] hover:bg-[length:105%] transition-[background-size]"
  videoid={videoId}
  thumbnailurl={thumbnailUrl}
  data-title={title}
  data-track="play_video"
  aria-label="Reproducir video"
  role="button"
  tabindex="0"
>
  <div
    class="p-4 pl-[18px] bg-white rounded-full absolute bottom-6 right-6 hover:scale-110 transition-transform duration-300"
    id=`Id${videoId}`
    title={title}
  >
    <Icon name="play" class="text-primary" />
  </div>
</tiktok-video>

<script>
  class TiktokVideo extends HTMLElement {
    videoId?: string

    connectedCallback() {
      const thumbnailUrl = this.getAttribute("thumbnailurl")
      this.videoId = this.getAttribute("videoid")!

      this.style.backgroundImage = `url(${thumbnailUrl})`

      this.addEventListener("click", this.activateVideo)
      this.addEventListener("keydown", this.handleKeyPress)
    }

    activateVideo() {
      this.style.backgroundImage = "unset"

      this.querySelector(`#Id${this.videoId}`)?.remove()

      const iframeEl = this.createIframe()
      this.append(iframeEl)
      iframeEl.focus()

      this.unMutePlayerByDefault()
    }

    handleKeyPress(event: KeyboardEvent) {
      if (event.code === "Enter" || event.code === "Space") {
        this.activateVideo()
      }
    }

    createIframe() {
      const iframeEl = document.createElement("iframe")
      iframeEl.width = "320"
      iframeEl.height = "570"
      iframeEl.classList.add("rounded-2xl", "w-full", "h-full", "snap-center")
      iframeEl.title = this.getAttribute("data-title")!
      iframeEl.allow =
        "accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture; transparency"
      iframeEl.allowFullscreen = true
      iframeEl.src = `https://www.tiktok.com/player/v1/${this.videoId}?autoplay=1`

      return iframeEl
    }

    unMutePlayerByDefault() {
      const messageHandler = (event: MessageEvent) => {
        if (
          event.origin === "https://www.tiktok.com" &&
          event.data.type === "onPlayerReady"
        ) {
          this.querySelector("iframe")!.contentWindow!.postMessage(
            { type: "unMute", "x-tiktok-player": true },
            "*"
          )

          window.removeEventListener("message", messageHandler)
        }
      }

      window.addEventListener("message", messageHandler)
    }
  }

  customElements.define("tiktok-video", TiktokVideo)
</script>
